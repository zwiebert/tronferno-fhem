=begin html

<a name="Tronferno"></a>

<h3>Tronferno</h3>

<i>Tronferno</i> is a logic FHEM module to control Fernotron shutters via radio frequency. To do this, it utilizes the <a href="https://github.com/zwiebert/tronferno-mcu">tronferno-mcu</a> micro controller firmware.is a logic FHEM module to control shutters and power plugs and receive commands from transmitters and sensors using Fernotron protocol. This requires the pyhsical TronfernoMCU module and the  <a href="https://github.com/zwiebert/tronferno-mcu">tronferno-mcu</a>  MCU firmware.

<a name="Tronfernodefine"></a>
<h4>Define</h4>

<p>
  <code>
    define  &lt;name&gt; Tronferno [a=ID] [g=N] [m=N] [input[=(plain|sun|central)]] [scan]<br>
  </code>

<p>
<ul>
  <li>a=ID : Device ID. Default is the ID of the original Central (stored in the MCU). To use, if a different ID needs to be used.<br>
             6-digit hex number following the pattern: 10xxxx=plain controller, 20xxxx=sun sensor, 80xxxx=central controller unit, 90xxxx=receiver</li>
  <li>g=N : group number (1-7)  or 0 (default) for all groups</li>
  <li>m=N : group member number (1-7) or 0 (default) for all group members</li>
  <li>scan : Defines a devie which receives alll incoming Fernotron message, if not comsumed by an explicit defined input device. This device will be auto-created as "Tronferno_Scan"</li>
  <li>input: Defines a device to receive Fernotron message for a given address (a/g/m)<br>
             The transmitter-types plain, sun oder central can be omitted, and will then be determined by the ID number<br>
 <li>Note: The options a/g/m have default value 0. It does not matter if these options are just omitted or set to value 0 like in a=0 g=0 m=0.</li>
</ul>

<p>  Incoming data is handled by input devices. There is one default input device, who handles all messages not matchin a defined input device. The default input device will be auto-created.
<p> Input devices are defined just like output devices, but with the parameter 'input' given in the define.

<h5>Examples of devices for transmitting</h5>
<ul>
<li><code>define tfmcu TronfernoMCU /dev/ttyUSB0</code> (define the required physical device first)</li>
<li><code>define roll21 Tronferno g=2 m=1</code> (shutter 1 in group 2)</li>
<li><code>define roll10 Tronferno g=1</code> (shutter-group 1)</li>
<li><code>define roll00 Tronferno</code> (all shutter-groups)</li>
<li><code>define plain_101234 Tronferno a=101234</code> (simulated plain sender 101234</li>
<li><code>define motor_0abcd Tronferno a=90abcd</code> (transmits direct to motor 0abcd. Add the leading digit 9 to the motor code to form an ID!)</li>
<li><code></code> </li>
</ul>
<h5>Examples of devices to receive</h5>
<ul>
<li><code>define myFernoSwitch Tronferno a=10abcd input</code> (plain transmitter as switch for up/down/stop)</li>
<li><code>define myFernoSun Tronferno a=20abcd input</code>  (sun sensor as on/off switch  (on: sun, off: no sun))</li>
<li><code> myFernoSwitch2 Tronferno g=2 m=3 input </code> (central unit as switch for up/down/stop)</li>
<li><code>define n_toggleHUEDevice3 notify myFernoSwitch:stop set HUEDevice3 toggle</code> (toggle Hue-lamp when pressing stop)</li>
<li><code>define n_toggleHUEDevice3 notify Tronferno_Scan:plain:1089ab:stop set HUEDevice3 toggle</code> (...like above but using the catch-all input device "scan")</li>
<li><code></code> </li>
</ul>




<h5>Three different methods to make messsages find their target Fernotron receiver</h5>
<ol>
  <li>Scan IDs of physical Fernotron controllers you own and copy their IDs in our FHEM output devices.  Use default Input device Fernotron_Scan to scan the ID first. Then use the ID to define your device. Here we have scanned the ID of our 2411 central resulting to 801234. Now define devices by using it
  </li>

  <li>Define Fernotron devices using invented IDs (like 100001, 100002, ...). Then pair these devices by sending a STOP command from it while the physical Fernotron receiver/motor is in pairing-mode (aka set-mode).
  </li>

<li> Receiver IDs to send directly to without pairing: RF controlled shutters may have a 5 digit code printed on or on a small cable sticker.
  Prefix that number with a 9 to get an valid ID for defining a device.</li>
</ol>

<h5>Three kinds of grouping</h5>

<ol>
  <li>groups and members are the same like in 2411. Groups are adressed using the 0 as wildcard.  (g=1 m=0 or g=0 m=1 or g=0 m=0) </li>

  <li> Like with plain controllers or sun sensors. Example: a (virtual) plain controller paired with each shutter of the entire floor.</li>

  <li> not possible with receiver IDs</li>
</ol>

<h5>Three examples</h5>
<ol>
  <li>
    <code>define myShutterGroup1 Tronferno g=1 m=0</code><br>
    <code>define myShutter11 Tronferno g=1 m=1</code><br>
    <code>define myShutter12 Tronferno g=1 m=2</code><br>
    ...
    <code>define myShutterGroup2 Tronferno g=2 m=0</code><br>
    <code>define myShutter21 Tronferno g=2 m=1</code><br>
    <code>define myShutter22 Tronferno g=2 m=2</code><br>
      </li>

  <li>
    <code>define myShutter1 Tronferno a=100001</code><br>
    <code>define myShutter2 Tronferno a=100002</code><br>
    Now activate Set-mode on the Fernotron receiver and send a STOP by the newly defined device you wish to pair with it.
 ...</li>

<li><code>define myShutter__0d123 Tronferno a=90d123</code></li>
</ol>

<a name="Tronfernoattr"></a>
<h4>Attributes</h4>
<ul>
  <li><a name="repeats">repeats N</a><br>
        repeat sent messages N additional times to increase the chance of successfull delivery (default: 1 repeat)
  </li>
  <li><a name="pctInverse">pctInverse 1|0</a><br>
        Invert position percents. Normal: Open=100%, Closed=0%. Inverted: Open=0%, Closed=100%
  </li>
</ul>

<a name=Tronfernoset></a>
<h4>Set</h4>
<ul>
  <a name=up></a>
  <li>up - open shutter</li>

  <a name=down></a>
  <li>down - close shutter</li>

  <a name=stop></a>
  <li>stop - stop moving shutter</li>

  <a name=set></a>
  <li>set  - activate pair/unpair mode on Fernotron receiver</li>

  <a name=sun-down></a>
  <li>sun-down - move shutter to sun position (but only if sun automatic is enabled and not below sun position)</li>

  <a name=sun-up></a>
  <li>sun-up - when at sun-position the shutter will be fully opened with this command (does nothing when not at sun position)</li>

  <a name=sun-inst></a>
  <li>sun-inst - set the current position as sun position</li>

  <a name=position></a>
  <li>position - set position in percent. 0 is down/closed. 100 is up/open.  (for alexa: 1% is stop, 2% is sun-down)</li>

  <a name=pct></a>
  <li>pct - set position in percent. 0 is down/closed. 100 is up/open.  (for alexa: 1% is stop, 2% is sun-down)</li>

  <a name=sun-auto></a>
  <li>sun-auto - switch on/off sun-sensor commands of a Fernotron device. (if off, it ignores command sun-down)</li>

   <a name=manual></a>
  <li>manual - switch on/off automatic shutter movement<br>
     The manual mode prevents all automatic shutter movement by internal timers or paired sensors<br>
  <ul>
   <li><code>set &lt;name&gt; manual on</code></li>
   <li><code>set &lt;name&gt; manual off</code></li>
  </ul>

    <p><small>Note: This is a kludge. It reprograms the Fernotron device with empty timers and disables sun-auto. When 'manual' is switched off again, the timer data, which was stored inside the MCU will be reprogrammed.  Not sure why this is done this way by the original central 2411. There are Fernotron receivers with a button for manual-mode, but the RF controlled motors seems to have no manual flag?</small>
</li>

<a name=random></a>
<li>random - switch on/off the random timer of a Fernotron device</li>

<a name=daily></a>
<li>daily - switch off or set the daily timer of a Fernotron device<br>
   Format: HHMMHHMM for up/down timers. Use '-' instead HHMM to disable the up or down timer.<br>
   <ul>
    <li><code>set &lt;name&gt; daily off</code> disables daily-timer</li>
    <li><code>set &lt;name&gt; daily "0700-"</code> up by daily-timer at 0700</li>
    <li><code>set &lt;name&gt; daily "-1200"</code> down at 1200</li>
  </ul>
</li>

<a name=weekly></a>
<li>weekly - switch off or set the weekly timer of a Fernotron device<br>
   Format: like daily (HHMMHHMM) but seven times. Starts at Monday. A '+' can be used to copy the previous day.<br>
   <ul>
     <li><code>set &lt;name&gt; weeky off</code> disables weekly-timer</li>
     <li><code>set &lt;name&gt; weekly "0700-++++0900-+"</code>  up by weekly-timer at Mon-Fri=0700, Sat-Sun=0900</li>
     <li><code>set &lt;name&gt; weekly "0600-0530-+++1130-0800-"</code> up at Mon=0600, Tue-Fri=0530, Sat=1130, Sun=0800</li>
   </ul>
</li>

<a name=astro></a>
<li>astro - switch on/off or set the astro (civil dusk) timer of a Fernotron device<br>
    The shutter goes down at civil dusk or some minutes before or after if you provide a -/+ minute offset.<br>
    <ul>
      <li><code>set &lt;name&gt; astro off</code> disables astro-timer</li>
      <li><code>set &lt;name&gt; astro on</code> down by astro-timer at civil dusk</li>
      <li><code>set &lt;name&gt; astro "-10"</code> down at 10 minutes before civil dusk</li>
      <li><code>set &lt;name&gt; astro 10</code> down at 10 minutes after civil dusk</li>
    </ul>
</li>

  <a name=xxx_pair></a>
  <li>xxx_pair - Lets MCU pair the next received sender to this shutter (Paired senders will influence the shutter position)</li>

  <a name=xxx_unpair></a>
  <li>xxx_unpair - Lets MCU unpair the next received Sender to this shutter</li>
</ul>


<h4>GUI und speech control</h4>
<ul>
<li>Alexa<br>
<code>attr &lt;name&gt;  genericDeviceType blind</code><br>
<code>attr &lt;name&gt;  alexaName Schlafraum Rollo</code><br>
</li>
<li>buttons and sliders in FHEMWEB<br>
<code>attr &lt;name&gt; webCmd up:stop:down:sun-down:pct</code><br>
</li>
<li>Home-Bridge<br>
<code>attr &lt;name&gt; room Homekit</code><br>
<code>attr &lt;name&gt; genericDeviceType blind</code><br>
<code>attr &lt;name&gt; webCmd down:stop:up</code><br>
<code>attr &lt;name&gt; userReadings position { ReadingsVal($NAME,"state",0) }</code><br>
</li>
</ul>

=end html
